name: "Create Docker images for microservices and push them to Docker Hub"

on: [workflow_dispatch, push]

jobs:
  docker-build-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Docker Login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Setup Python and Pip
      uses: actions/setup-python@v4
      with:
        python-version: '3.10' 
    - name: Installing YAMl reader tool yq
      run: pip3 install yq
    - name: Build and push Docker images
      run: |
        config_file=build/build-config.yml
        microservices=$(yq ".config | length" "$config_file")
        for ((count = 0; count < $microservices; count++)); do
          echo "Name: $(yq .config[$count].name "$config_file")"
          images_number=$(yq ".config[$count].build | length" "$config_file")
          
          for ((count2 = 0; count2 < $images_number; count2++)); do
            work_dir=(yq '.config[$count].build[count2]."work-dir"' "$config_file")
            image_name=(yq '.config[$count].build[count2]."image-name"' "$config_file")
            dockerfile=(yq '.config[$count].build[count2]."dockerfile"' "$config_file")

            if [ "$dockerfile" = "null" ]; then
              docker build -t $DOCKER_USERNAME/$image_name:$GITHUB_SHA --build-arg WORK_DIR=$work_dir .
            else
              docker build -t $DOCKER_USERNAME/$image_name:$GITHUB_SHA -f $dockerfile --build-arg WORK_DIR=$work_dir .
            fi
          done
        done
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        GITHUB_SHA: ${{ github.sha }}
    # - name: Build Docker and push Image
    #   run: |
    #     # cat .github/MICROSERVICES_LIST/microservices_list.txt
    #     # IFS=$'\n' read -d '' -ra microsvc < .github/MICROSERVICES_LIST/microservices_list.txt
    #     readarray -t microsvc < .github/MICROSERVICES_LIST/microservices_list.txt
    #     echo $microsvc
    #     for work_dir in "${microsvc[@]}"; do
    #       image_name=$(echo "$work_dir" | cut -d'/' -f1)
    #       echo $work_dir
    #       echo $image_name
    #       docker build -t $DOCKER_USERNAME/$image_name:$GITHUB_SHA -f ./build/maven/Dockerfile --build-arg WORK_DIR=$work_dir .
    #       docker push $DOCKER_USERNAME/$image_name:$GITHUB_SHA
    #     done
    #   env:
    #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    #     GITHUB_SHA: ${{ github.sha }}
